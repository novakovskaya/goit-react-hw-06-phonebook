{"version":3,"sources":["components/Section/Section.module.scss","components/Filter/Filter.module.scss","components/Container/Container.module.scss","components/Container/Container.js","components/Section/Section.js","redux/contacts/contacts-actions.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.scss","components/ContactList/ContactList.module.scss"],"names":["module","exports","Container","children","className","styles","Section","title","Title","addContact","createAction","name","number","payload","id","nanoid","deleteContact","filterContact","ContactForm","useState","setName","setNumber","dispatch","useDispatch","handleInput","event","target","value","resetInput","Form","onSubmit","preventDefault","actions","Label","Input","type","onChange","pattern","required","Button","ContactList","contacts","useSelector","state","items","filter","filteredContacts","toLowerCase","includes","normalizedFilter","List","map","Item","Contact","Number","onClick","Filter","App","createReducer","contactsList","find","alert","_","combineReducers","persistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactsReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.83b0be6c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Section\":\"Section_Section__CqcNT\",\"Title\":\"Section_Title__3JdV3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Label\":\"Filter_Label__2sheC\",\"Input\":\"Filter_Input__TN8JA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__11SY1\"};","import styles from \"./Container.module.scss\";\n\nconst Container = ({ children }) => (\n  <div className={styles.Container}>{children}</div>\n);\n\nexport default Container;\n","import PropTypes from \"prop-types\";\nimport styles from \"./Section.module.scss\";\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className={styles.Section}>\n      <h1 className={styles.Title}>{title}</h1>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Section;\n","import { createAction } from \"@reduxjs/toolkit\";\nimport { nanoid } from \"nanoid\";\n\nconst addContact = createAction(\"contacts/add\", ({ name, number }) => ({\n  payload: {\n    id: nanoid(),\n    name,\n    number,\n  },\n}));\n\nconst deleteContact = createAction(\"contacts/delete\");\nconst filterContact = createAction(\"contacts/filter\");\n\nexport default { addContact, deleteContact, filterContact };\n","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { nanoid } from \"nanoid\";\nimport actions from \"../../redux/contacts/contacts-actions\";\nimport styles from \"./ContactForm.module.scss\";\n\nconst ContactForm = () => {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const handleInput = (event) => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n\n      case \"number\":\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    dispatch(actions.addContact({ name, number }));\n    resetInput();\n  };\n\n  const resetInput = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form className={styles.Form} onSubmit={handleSubmit}>\n      <label className={styles.Label}>\n        Name\n        <input\n          className={styles.Input}\n          id={nanoid()}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleInput}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n\n      <label className={styles.Label}>\n        Number\n        <input\n          className={styles.Input}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleInput}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n\n      <button type=\"submit\" className={styles.Button}>\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","import PropTypes from \"prop-types\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport actions from \"../../redux/contacts/contacts-actions\";\nimport styles from \"./ContactList.module.scss\";\n\nconst ContactList = () => {\n  const contacts = useSelector((state) => state.contacts.items);\n  const filter = useSelector((state) => state.contacts.filter);\n  const dispatch = useDispatch();\n\n  const normalizedFilter = (contacts, filter) => {\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  const filteredContacts = normalizedFilter(contacts, filter);\n\n  return (\n    <ul className={styles.List}>\n      {filteredContacts.map(({ id, name, number }) => (\n        <li key={id} className={styles.Item}>\n          <p className={styles.Contact}>{name}:</p>\n          <p className={styles.Number}>{number}</p>\n\n          <button\n            type=\"button\"\n            className={styles.Button}\n            onClick={() => dispatch(actions.deleteContact(id))}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  filteredContacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default ContactList;\n","import PropTypes from \"prop-types\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport actions from \"../../redux/contacts/contacts-actions\";\nimport styles from \"./Filter.module.scss\";\n\nconst Filter = () => {\n  const value = useSelector((state) => state.contacts.filter);\n  const dispatch = useDispatch();\n\n  const onFindContact = (event) =>\n    dispatch(actions.filterContact(event.target.value));\n\n  return (\n    <label className={styles.Label}>\n      Find contacts by name\n      <input\n        type=\"text\"\n        value={value}\n        className={styles.Input}\n        onChange={onFindContact}\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n};\n\nexport default Filter;\n","import Container from \"./components/Container\";\nimport Section from \"./components/Section\";\nimport ContactForm from \"./components/ContactForm\";\nimport ContactList from \"./components/ContactList\";\nimport Filter from \"./components/Filter\";\nimport styles from \"./App.module.scss\";\n\nconst App = () => (\n  <Container>\n    <Section title=\"Phonebook\">\n      <ContactForm />\n    </Section>\n\n    <Section title=\"Contacts\">\n      <Filter />\n      <ContactList />\n    </Section>\n  </Container>\n);\n\nexport default App;\n","import { createReducer, combineReducers } from \"@reduxjs/toolkit\";\nimport actions from \"./contacts-actions\";\nimport contactsList from \"../../contacts.json\";\n\nconst items = createReducer(contactsList, {\n  [actions.addContact]: (state, { payload }) =>\n    state.find(({ name }) => name === payload.name)\n      ? alert(`${payload.name} is already in contacts.`)\n      : [...state, payload],\n\n  [actions.deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer(\"\", {\n  [actions.filterContact]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport contactsReducer from \"./contacts/contacts-reducer\";\n\nconst persistConfig = {\n  key: \"contacts\",\n  storage,\n  blacklist: [\"filter\"],\n};\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(persistConfig, contactsReducer),\n  },\n  middleware: (getDefaultMiddleware) => [\n    ...getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n  ],\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nimport App from \"./App\";\nimport store from \"./redux/store\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"ContactForm_Form__pmdyI\",\"Label\":\"ContactForm_Label__2Lwof\",\"Input\":\"ContactForm_Input__1tKk0\",\"Button\":\"ContactForm_Button__1WD28\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"ContactList_List__2kG7o\",\"Item\":\"ContactList_Item__2zmUy\",\"Contact\":\"ContactList_Contact__3m8Gx\",\"Number\":\"ContactList_Number__bk2uA\",\"Button\":\"ContactList_Button__2HINY\"};"],"sourceRoot":""}